/// \file S3TrackerSD.hh
/// \brief Definition of the S3TrackerSD class

#ifndef S3TrackerSD_h
#define S3TrackerSD_h 1

#include "G4VSensitiveDetector.hh"

#include "S3TrackerHit.hh"

#include <vector>

class G4Step;
class G4HCofThisEvent;
class S3TrackerSD;
class G4Track;
///sensitive detector class
///
/// In Initialize(), it creates one hit for each calorimeter layer and one more
/// hit for accounting the total quantities in all layers.
///
/// The values are accounted in hits in ProcessHits() function which is called
/// by Geant4 kernel at each step.

class S3TrackerSD : public G4VSensitiveDetector
{
  public:
             S3TrackerSD(const G4String& name, 
                         const G4String& hitsCollectionName);
    virtual ~S3TrackerSD();
  
  // methods from base class
    virtual void      Initialize(G4HCofThisEvent* hitCollection);
    virtual G4bool    ProcessHits(G4Step* step, G4TouchableHistory* history);
    virtual void      EndOfEvent(G4HCofThisEvent* hitCollection);
            double  GetEnergyDeposit() const {return fEnergy;}      
  private:
    S3TrackerHitsCollection* fHitsCollection;
    G4double                 fEnergy;
    G4String                 fParticleName;
    G4ThreeVector            fPrePos;
    G4ThreeVector            fPostPos;
};

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

#endif

